"""
This type stub file was generated by pyright.
"""

PY3 = ...
def validate_string(s): # -> bool:
    """
    Check input has length and that length > 0

    :param s:
    :return: True if len(s) > 0 else False
    """
    ...

def check_for_equivalence(func): # -> (*args: Unknown, **kwargs: Unknown) -> (Unknown | Literal[100]):
    ...

def check_for_none(func): # -> (*args: Unknown, **kwargs: Unknown) -> (Unknown | Literal[0]):
    ...

def check_empty_string(func): # -> (*args: Unknown, **kwargs: Unknown) -> (Unknown | Literal[0]):
    ...

bad_chars = ...
if PY3:
    translation_table = ...
    unicode = str
def asciionly(s):
    ...

def asciidammit(s): # -> str | bytes:
    ...

def make_type_consistent(s1, s2): # -> tuple[str, str] | tuple[str | Unknown, unicode]:
    """If both objects aren't either both string or unicode instances force them to unicode"""
    ...

def full_process(s, force_ascii=...): # -> str:
    """Process string by
        -- removing all but letters and numbers
        -- trim whitespace
        -- force to lower case
        if force_ascii == True, force convert to ascii"""
    ...

def intr(n): # -> int:
    '''Returns a correctly rounded integer'''
    ...

